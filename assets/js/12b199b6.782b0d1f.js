"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[4871],{4137:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return m}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),d=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=d(e.components);return a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=d(r),m=n,h=p["".concat(c,".").concat(m)]||p[m]||u[m]||o;return r?a.createElement(h,i(i({ref:t},l),{},{components:r})):a.createElement(h,i({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var d=2;d<o;d++)i[d]=r[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}p.displayName="MDXCreateElement"},166:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return d},toc:function(){return l},default:function(){return p}});var a=r(7462),n=r(3366),o=(r(7294),r(4137)),i=["components"],s={title:"What is Generalized Metadata Service (GMS)?",sidebar_label:"What is Generalized Metadata Service (GMS)?",slug:"/what/gms",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/what/gms.md"},c="What is Generalized Metadata Service (GMS)?",d={unversionedId:"docs/what/gms",id:"docs/what/gms",isDocsHomePage:!1,title:"What is Generalized Metadata Service (GMS)?",description:"Metadata for entities onboarded to GMA is served through microservices known as Generalized Metadata Service (GMS). GMS typically provides a Rest.li API and must access the metadata using GMA DAOs.",source:"@site/genDocs/docs/what/gms.md",sourceDirName:"docs/what",slug:"/what/gms",permalink:"/docs/what/gms",editUrl:"https://github.com/datahub-project/datahub/blob/master/docs/what/gms.md",tags:[],version:"current",frontMatter:{title:"What is Generalized Metadata Service (GMS)?",sidebar_label:"What is Generalized Metadata Service (GMS)?",slug:"/what/gms",custom_edit_url:"https://github.com/datahub-project/datahub/blob/master/docs/what/gms.md"}},l=[],u={toc:l};function p(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"what-is-generalized-metadata-service-gms"},"What is Generalized Metadata Service (GMS)?"),(0,o.kt)("p",null,"Metadata for ",(0,o.kt)("a",{parentName:"p",href:"/docs/what/entity"},"entities")," ",(0,o.kt)("a",{parentName:"p",href:"/docs/metadata-modeling/metadata-model"},"onboarded")," to ",(0,o.kt)("a",{parentName:"p",href:"/docs/what/gma"},"GMA")," is served through microservices known as Generalized Metadata Service (GMS). GMS typically provides a ",(0,o.kt)("a",{parentName:"p",href:"http://rest.li"},"Rest.li")," API and must access the metadata using ",(0,o.kt)("a",{parentName:"p",href:"/docs/architecture/metadata-serving"},"GMA DAOs"),". "),(0,o.kt)("p",null,"While a GMS is completely free to define its public APIs, we do provide a list of ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub-gma/tree/master/restli-resources/src/main/java/com/linkedin/metadata/restli"},"resource base classes")," to leverage for common patterns."),(0,o.kt)("p",null,"GMA is designed to support a distributed fleet of GMS, each serving a subset of the ",(0,o.kt)("a",{parentName:"p",href:"/docs/what/graph"},"GMA graph"),". However, for simplicity we include a single centralized GMS (",(0,o.kt)("a",{parentName:"p",href:"https://github.com/datahub-project/datahub/blob/master/gms"},"datahub-gms"),") that serves all entities."))}p.isMDXComponent=!0}}]);